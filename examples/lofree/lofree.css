:root{
  --color-theme: #0b0b0b;
  --key-gap: 5px;
  --key-size: 50px;
}

html, body{
  margin: 0;
  padding: 0;
}

body{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
}

.keyboard{
  display: inline-block;
  padding: 40px 5px 10px;
  border-radius: 50px;
  background: var(--color-theme);
  box-shadow: inset 0 0 20px #979797;
}

.keyboard-wrap{
  padding: 20px;
  border-radius: 60px 60px 45px 45px;
  box-shadow: inset 0 0 15px #474747;
}

.key{
  display: flex;
  justify-content: center;
  width: var(--key-size);
  height: var(--key-size);
  border-radius: calc(var(--key-size) / 2);
  font-size: 12px;
  padding: 10px 0;
  background: #e5e6e1;
  color: #5f5f5f;
  cursor: pointer;
  user-select: none;
  box-sizing: border-box;
}

.key:not(:last-child){
  margin-right: var(--key-gap);
}

.key[data-code="Fn"],
.key[data-code="ControlLeft"],
.key[data-code="AltLeft"],
.key[data-code="MetaLeft"],
.key[data-code="Space"],
.key[data-code="MetaRight"],
.key[data-code="AltRight"],
.key[data-code="ArrowLeft"],
.key[data-code="ArrowUp"],
.key[data-code="ArrowRight"],
.key[data-code="ArrowDown"],
.key[data-code="ShiftLeft"],
.key[data-code="ShiftRight"],
.key[data-code="CapsLock"],
.key[data-code="Tab"],
.key[data-code="Backslash"],
.key[data-code="Backspace"]
{
  background: #8f8f8f;
  color: #0b0b0b;
}

.key[data-code="Space"]{
  background: #dc4443;
  color: #e5e6e1;
}

.key[data-code="ShiftLeft"],
.key[data-code="Enter"]{
  width: calc(var(--key-size) * 2 + var(--key-gap));
}
.key[data-code="Space"]{
  width: calc(var(--key-size) * 5 + var(--key-gap) * 5);
}

.key.keydown{
  background: #333333;
  color: #ffffff;
}

.key.keypress{
  animation: upAndDown 300ms linear infinite;
}

@keyframes upAndDown{
  25%{
    transform: translateY(var(--key-gap));
  }
  75%{
    transform: translateY(- var(--key-gap));
  }
}

.row{
  display: flex;
  justify-content: center;
  align-items: center;
  box-sizing: border-box;
}

.row:nth-child(odd){
  padding-right: calc(var(--key-size) / 2);
}

.row:nth-child(even){
  padding-left: calc(var(--key-size) / 2);
}

.row:not(:last-child){
  margin-bottom: var(--key-gap);
}